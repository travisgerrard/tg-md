'use strict';

var moment = require('moment');
var React = require('react');

var Time = React.createClass({displayName: "Time",

  propTypes: {
    value: React.PropTypes.oneOfType([
      React.PropTypes.instanceOf(moment.fn.constructor),
      React.PropTypes.instanceOf(Date),
      React.PropTypes.number,
      React.PropTypes.string
    ]),
    relative: React.PropTypes.bool,
    format: React.PropTypes.string,
    titleFormat: React.PropTypes.string,
    locale: React.PropTypes.string
  },
  getDefaultProps: function() {
    return {
      titleFormat: 'YYYY-MM-DD HH:mm'
    };
  },
  render:function() {
    /* jshint eqnull:true */
    var $__0=       this.props,value=$__0.value,relative=$__0.relative,format=$__0.format,locale=$__0.locale,titleFormat=$__0.titleFormat,props=(function(source, exclusion) {var rest = {};var hasOwn = Object.prototype.hasOwnProperty;if (source == null) {throw new TypeError();}for (var key in source) {if (hasOwn.call(source, key) && !hasOwn.call(exclusion, key)) {rest[key] = source[key];}}return rest;})($__0,{value:1,relative:1,format:1,locale:1,titleFormat:1});

    if (!moment.isMoment(value)) {
      value = moment(value);
    }

    if (locale) {
      value = value.locale(locale);
    }

    var machineReadable = value.format('YYYY-MM-DDTHH:mm:ssZ');

    if (relative || format) {
      var humanReadable = relative ? value.fromNow() : value.format(format);
      return (
        React.createElement("time", React.__spread({},  props, {dateTime: machineReadable, title: relative ? value.format(titleFormat) : null}), 
          humanReadable
        )
      );
    } else {
      return React.createElement("time", React.__spread({},  props), machineReadable);
    }
  }
});

module.exports = Time;
